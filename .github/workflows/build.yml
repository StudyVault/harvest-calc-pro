name: Build and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  sonar:
    name: SonarCloud Analysis
    needs: build
    runs-on: ubuntu-latest
    # Permitir que falhe sem bloquear o deploy
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    permissions:
      contents: write
      pages: write
      id-token: write
    name: Deploy to GitHub Pages
    needs: [build] # Removido dependência do sonar para não bloquear deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: List build contents (debug)
        run: |
          echo "📁 Conteúdo da pasta dist:"
          ls -la dist/
          echo "📄 Verificando index.html:"
          if [ -f "dist/index.html" ]; then
            echo "✅ index.html encontrado"
            head -n 10 dist/index.html
          else
            echo "❌ index.html NÃO encontrado!"
          fi

      - name: Deploy Information
        run: |
          echo "🚀 INICIANDO DEPLOY PARA GITHUB PAGES"
          echo "📍 URL de destino: https://studyvault.github.io/harvest-calc-pro/"
          echo "📂 Repositório: ${{ github.repository }}"
          echo "🌿 Branch de origem: ${{ github.ref_name }}"
          echo "🎯 Branch de destino: gh-pages"
          echo "📦 Pasta a ser publicada: ./dist"
          echo "⏰ Timestamp: $(date)"
          echo "🏗️ Workflow ID: ${{ github.run_id }}"
          echo "🔧 Workflow URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo ""
          echo "🔍 VERIFICAÇÕES PRÉ-DEPLOY:"
          echo "- Repositório owner: ${{ github.repository_owner }}"
          echo "- Repositório name: ${{ github.event.repository.name }}"
          echo "- GitHub Pages será: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "- Confirmação URL final: https://studyvault.github.io/harvest-calc-pro/"
          echo "==============================================="

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true
          enable_jekyll: false
          cname: false

      - name: Deploy Success Information
        run: |
          echo "✅ DEPLOY CONCLUÍDO COM SUCESSO!"
          echo "🌐 Site disponível em: https://studyvault.github.io/harvest-calc-pro/"
          echo "⚠️  Aguarde alguns minutos para propagar as mudanças"
          echo "🔄 Para verificar: Ctrl+F5 para limpar cache do navegador"
          echo "📊 GitHub Pages Status: https://github.com/${{ github.repository }}/settings/pages"
          echo "==============================================="
